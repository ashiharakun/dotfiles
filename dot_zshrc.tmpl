autoload -Uz compinit
compinit

export PATH="/usr/local/sbin:$PATH"

eval "$(sheldon source)"
eval "$(mise activate zsh)"
eval "$(starship init zsh)"
eval "$(direnv hook zsh)"

# 履歴関連
HISTFILE=$(eval echo ~$USER)/.zsh_history
HISTSIZE=1000000
SAVEHIST=1000000

setopt share_history
setopt hist_ignore_all_dups
setopt hist_ignore_space
setopt hist_reduce_blanks
setopt hist_save_no_dups
setopt inc_append_history

setopt AUTO_CD
setopt AUTO_PARAM_KEYS


# エイリアス
alias mv='mv -i'
alias rm='rm -i'
alias cp='cp -i'

if [[ $(command -v eza) ]]; then
  alias ls='eza --icons --git'
  alias lt='eza -T -L 3 -a -I "node_modules|.git|.cache" --icons'
  alias ltl='eza -T -L 3 -a -I "node_modules|.git|.cache" -l --icons'
fi

alias ll='ls -lGF'
alias la="ls -la"

alias ..='cd ..'
alias ..2='cd ../..'
alias ..3='cd ../../..'

alias cdgt='cd $(git rev-parse --show-toplevel)'

alias -g G='| grep --color=auto'
alias -g C='| wc -l'

alias pip-upgrade-all="pip list -o | tail -n +3 | awk '{ print \$1 }' | xargs pip install -U"

alias vi="nvim"

{{ if eq .chezmoi.os "darwin" }}
alias bu='brew update;brew upgrade'
{{ end }}


zshaddhistory() {
    local line="${1%%$'\n'}"
    [[ ! "$line" =~ "^(cd|jj?|lazygit|la|ll|ls|rm|rmdir)($| )" ]]
}

# default
export ZENO_GIT_CAT="cat"
# git file preview with color
# export ZENO_GIT_CAT="bat --color=always"

# default
export ZENO_GIT_TREE="tree"
# git folder preview with color
# export ZENO_GIT_TREE="eza --tree"

if [[ -n $ZENO_LOADED ]]; then
  bindkey ' '  zeno-auto-snippet

  # fallback if snippet not matched (default: self-insert)
  # export ZENO_AUTO_SNIPPET_FALLBACK=self-insert

  # if you use zsh's incremental search
  # bindkey -M isearch ' ' self-insert

  bindkey '^m' zeno-auto-snippet-and-accept-line

  bindkey '^i' zeno-completion

  bindkey '^x '  zeno-insert-space
  bindkey '^x^m' accept-line
  bindkey '^x^z' zeno-toggle-auto-snippet

  # fallback if completion not matched
  # (default: fzf-completion if exists; otherwise expand-or-complete)
  # export ZENO_COMPLETION_FALLBACK=expand-or-complete
fi
